# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master, development ]
    paths-ignore:
      - 'scripts/**'
  pull_request:
    branches: [ master, development ]

jobs:
  build:

    runs-on: ubuntu-latest
    container: python:3.8-buster

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12.4
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Type checks with mypy
      run:  mypy --config-file mypy.ini ./src

    - name: Install db migration dependencies
      run: npm ci --ignore-scripts
    - name: Test with pytest
      run: pytest --cov=./src --cov-report=xml src

    - name: Uninstall coveragepy
      run: pip uninstall -y coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        flags: scraper
        name: Scraper coverage
        file: '*/manga-tracker/coverage/coverage.xml'

    env:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: postgres
      DB_NAME_TEST: postgres
      DB_USER: postgres
      PGPASSWORD: postgres
      DB_PASSWORD: postgres
      NO_TEMP_DB: TRUE
