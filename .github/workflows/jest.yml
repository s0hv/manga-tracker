name: Web app tests

on:
  push:
    branches: [ master, development ]
    paths-ignore:
      - 'scripts/**'
  pull_request:

defaults:
  run:
    working-directory: web

jobs:
  build:
    name: Web app tests
    runs-on: ubuntu-latest
    container: node:16-stretch

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12.4
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    # Force https use since ssh does not work
    - run: 'git config --global url."https://github.com/".insteadOf ssh://git@github.com/'
    - run: 'git config --global url."https://".insteadOf ssh://'

    - name: Install deps
      run: |
        npm ci
        cd .. && npm ci

    - name: Initialize database
      run: cd .. && npm run migrate:up && npm run migrate:test

    - name: Run jest and generate coverage
      run: npm run test:ci

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        flags: frontend
        name: Frontend coverage

    env:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: postgres
      DB_NAME_TEST: postgres
      DB_USER: postgres
      PGPASSWORD: postgres

      ELASTIC_NODE: http://localhost:9200

      REDIS_URL: redis:6379
      DEBUG: debug,session-*,auth-info
      TZ: UTC
      LEVEL: silent
