components:
  responses:
    validationError:
      description: Validation of a parameter failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validationError'

    notFound:
      description: Requested resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/genericError'

    unauthorized:
      description: No authentication provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validationError'

  schemas:
    validationError:
      type: object
      description: A validation error. The value is either an error message
        or an object or an array of objects describing where the error happened.
      properties:
        error:
          oneOf:
            - type: array
              items:
                $ref: '#/components/schemas/expressValidatorError'
            - $ref: '#/components/schemas/expressValidatorError'
            - type: string
              description: The error message

      required:
        - error

    genericError:
      type: object
      properties:
        error:
          type: string
          example: The error message
      required:
        - error

    expressValidatorError:
      type: object
      properties:
        msg:
          type: string
          description: The error message
          example: Error message
        param:
          type: string
          description: Name of the parameter that caused the error
        value:
          description: The value of the param
        location:
          type: string
          description: Location of the param that caused the error
          enum: [body, query, params, cookies, headers]
          example: body

      required:
        - msg
        - param
        - location

    databaseId:
      oneOf:
        - type: integer
          minimum: 0
          description: An id that identifies an object in the database
        - type: string
          pattern: "^\\d+$"
          description: An id that identifies an object in the database

    interval:
      type: object
      description: An object that represents a time interval
      properties:
        days:
          type: integer
          nullable: true
        hours:
          type: integer
          nullable: true
        seconds:
          type: integer
          nullable: true

    service:
      type: object
      description: Contains information of a manga providing service
      properties:
        serviceId:
          $ref: '#/components/schemas/databaseId'
        name:
          type: string
        disabled:
          type: boolean
        url:
          type: string
        chapterUrlFormat:
          type: string
          format: uri
          example: https://mangaplus.shueisha.co.jp/viewer/{}
        mangaUrlFormat:
          type: string
          format: uri
          example: https://mangaplus.shueisha.co.jp/titles/{}

      required:
        - serviceId
        - name
        - disabled
        - url
        - chapterUrlFormat
        - mangaUrlFormat

    mangaService:
      type: object
      description: Contains information about a single service
      properties:
        titleId:
          type: string
        serviceId:
          $ref: '#/components/schemas/databaseId'
        name:
          type: string
        urlFormat:
          type: string
          format: uri
          example: https://mangaplus.shueisha.co.jp/viewer/{}
        url:
          type: string
          format: uri
          example: https://mangaplus.shueisha.co.jp/titles/{}

      required:
        - titleId
        - serviceId
        - name
        - urlFormat
        - url

    mangaInfo:
      type: object
      properties:
        cover:
          type: string
          nullable: true
          format: uri
          example: https://mangadex.org/images/manga/20882.jpg
        status:
          $ref: '#/components/schemas/status'
        lastUpdated:
          type: string
          format: date-time
          nullable: true
        bw:
          type: string
          nullable: true
          description: Bookwalker id
          example: series/114645
        mu:
          type: string
          nullable: true
          description: Manga updates id
          example: 139601
        mal:
          type: string
          nullable: true
          description: MyAnimeList id
          example: 103897
        amz:
          type: string
          format: uri
          nullable: true
          description: Amazon link
          example: https://www.amazon.co.jp/gp/product/B075F8JBQ1
        ebj:
          type: string
          format: uri
          nullable: true
          description: ebook japan link
          example: https://ebookjapan.yahoo.co.jp/books/413780/
        engtl:
          type: string
          format: uri
          nullable: true
          description: Link to the official english translation
          example: https://www.viz.com/dr-stone
        raw:
          type: string
          format: uri
          nullable: true
          description: Link to the official raws
          example: https://shonenjumpplus.com/episode/13932016480029012477
        nu:
          type: string
          nullable: true
          description: Novel Updates id
          example: tensei-shitara-slime-datta-ken
        kt:
          type: string
          nullable: true
          description: Kitsu id
          example: 38860
        ap:
          type: string
          nullable: true
          description: Anime-Planet id
          example: dr-stone
        al:
          type: string
          nullable: true
          description: AniList id
          example: 98416

      required:
        - cover
        - status
        - lastUpdated
        - bw
        - mu
        - mal
        - amz
        - ebj
        - engtl
        - raw
        - nu
        - kt
        - ap
        - al

    aliases:
      type: array
      description: A list of aliases of a manga
      items:
        type: string

    status:
      type: integer
      enum: [0, 1, 2, 3]
      description: >
        Release status:
         * `0` - Ongoing
         * `1` - Completed
         * `2` - Dropped
         * `3` - Hiatus

    chapter:
      type: object
      properties:
        chapterId:
          $ref: '#/components/schemas/databaseId'
        title:
          type: string
          description: Title of the chapter
        chapterNumber:
          type: integer
          description: Integer part of the chapter number
        chapterDecimal:
          type: integer
          description: Decimal part of the chapter number
          nullable: true
        releaseDate:
          type: string
          format: date-time
          description: Datetime string
          example: '2020-05-24T14:24:12.320Z'
        group:
          type: string
          nullable: true
        serviceId:
          $ref: '#/components/schemas/databaseId'
        chapterIdentifier:
          type: string
          description: Chapter identifier that can be used in a services urlFormat in place of {}

      required:
        - chapterId
        - title
        - chapterNumber
        - releaseDate
        - group
        - serviceId
        - chapterIdentifier

    chapterWithManga:
      allOf:
        - $ref: '#/components/schemas/chapter'
        - type: object
          properties:
            mangaId:
              $ref: '#/components/schemas/databaseId'
            manga:
              type: string
            titleId:
              type: string
            cover:
              type: string
              format: uri

          required:
            - mangaId
            - manga
            - titleId


    manga:
      description: Contains simple information on a single manga
      type: object
      properties:
        mangaId:
          $ref: '#/components/schemas/databaseId'
        title:
          type: string
        releaseInterval:
          $ref: '#/components/schemas/interval'
        latestRelease:
          type: string
          format: date-time
          nullable: true
        estimatedRelease:
          type: string
          format: date-time
          nullable: true
        latestChapter:
          type: integer
          nullable: true

      required:
        - mangaId
        - title
        - releaseInterval
        - latestRelease
        - estimatedRelease
        - latestChapter

    fullManga:
      description: Contains extended information of a single manga
      type: object
      properties:
        manga:
          allOf:
            - $ref: '#/components/schemas/manga'
            - $ref: '#/components/schemas/mangaInfo'
        services:
          type: array
          items:
            $ref: '#/components/schemas/mangaService'
        aliases:
          $ref: '#/components/schemas/aliases'

      required:
        - services
        - manga

    notificationManga:
      description: Object containing information of a followed manga.
      type: object
      properties:
        mangaId:
          $ref: '#/components/schemas/databaseId'
        serviceId:
          allOf:
            - $ref: '#/components/schemas/databaseId'
            - type: integer
              nullable: true
        title:
          type: string
        serviceName:
          type: string

      required:
        - mangaId
        - serviceId
        - title
        - serviceName

    notificationField:
      description: An object describing an input field of a notification used for formatting the message.
      type: object
      properties:
        value:
          type: string
          nullable: true
        name:
          type: string
        optional:
          type: boolean

      required:
        - name

    notificationType:
      type: integer
      enum: [ 1, 2 ]
      description: >
        Notification types:
         * `1` - Discord webhook
         * `2` - Generic json webhook

    userNotification:
      description: An object containing information about a notification created by a user.
      type: object
      properties:
        notificationId:
          $ref: '#/components/schemas/databaseId'
        useFollows:
          type: boolean
        notificationType:
          $ref: '#/components/schemas/notificationType'
        timesRun:
          type: integeer
        timesFailed:
          type: integer
        disabled:
          type: boolean
        groupByManga:
          type: boolean
        destination:
          type: string
        name:
          type: string
        manga:
          description: Followed manga. Not required if useFollows is set to true.
          type: array
          items:
            $ref: '#/components/schemas/notificationManga'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/notificationField'

      required:
        - notificationType
        - groupByManga
        - destination
        - disabled
        - fields

    userNotificationWithId:
      allOf:
        - $ref: '#/components/schemas/notificationField'
        - type: object
          required:
            - notificationId
